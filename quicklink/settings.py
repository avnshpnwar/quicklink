"""
Django settings for quicklink project.

Generated by 'django-admin startproject' using Django 1.11.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from . import env, constants

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm45jg@!+v)qma0qo7n8=d9p%qlh(@cqcjf7%1g=7taa3v18cjy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=(False, True)[env.get_env() == constants.DEVENV]

ALLOWED_HOSTS=(['127.0.0.1','localhost'], ['localhost','127.0.0.1'])[env.get_env() == constants.DEVENV]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'quicklink',
    'home',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'quicklink.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
            ],
        },
    },
]

WSGI_APPLICATION = 'quicklink.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': env.get_database(),
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = False

USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
STATIC_URL = '/QuickLink/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'stat')
#Media Files
MEDIA_ROOT = os.path.join(BASE_DIR,'media')
MEDIA_URL = '/media/'

#Change default login url
LOGIN_URL = '/QuickLink/auth/logon/'


#logging configuration
APP_LOG_LEVEL = env.get_log_level()
HANDLERS = (['logfile', ],['logfile', 'console'])[env.get_env() == constants.DEVENV]
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format' : "%(asctime)s | %(levelname)-8s | %(name)-20s | %(funcName)-30s | %(lineno)-4s | %(message)s",
            'datefmt' : "%Y-%b-%d %H:%M:%S"
        },
        'simple': {
            'format' : '%(asctime)s | %(levelname)-8s | %(name)-20s | %(funcName)-30s | %(lineno)-4s | %(message)s',
            'datefmt' : "%H:%M:%S"
        },
    },
    'handlers': {
        'logfile': {
            'level': APP_LOG_LEVEL,
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/quicklink.log'),
            'maxBytes': 1024*1024*5,  # 5 MB
            'backupCount': 5,
            'formatter': 'verbose'
        },
        'console': {
            'level': APP_LOG_LEVEL,
            'class' : 'logging.StreamHandler',
            'formatter': 'simple'
        }        
    },
    'loggers': {
        'django': {
            'handlers': HANDLERS,
            'propagate': True,
            'level':'ERROR',
        },
        'quicklink': {
            'handlers': HANDLERS,
            'propagate': True,
            'level': APP_LOG_LEVEL,
        },
        'home': {
            'handlers': HANDLERS,
            'propagate': True,
            'level': APP_LOG_LEVEL,
        },
    }
}