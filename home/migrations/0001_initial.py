# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-12-30 09:20
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='site name', max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Site name')),
                ('testurl_direct', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Test direct URL')),
                ('testurl_indirect', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Test indirect URL')),
                ('systurl_direct', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Syst direct URL')),
                ('systurl_indirect', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Syst indirect URL')),
                ('produrl_direct', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Prod direct URL')),
                ('produrl_indirect', models.CharField(blank=True, help_text='if not applicable, leave blank', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4), django.core.validators.RegexValidator(message='site must start with http:// or https://', regex='^https?:\\/\\/')], verbose_name='Prod indirect URL')),
                ('last_modified_by', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category', models.CharField(max_length=60, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(3)])),
                ('listorder', models.SmallIntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country', models.CharField(max_length=60, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(3)])),
                ('code', models.CharField(max_length=3, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('listorder', models.SmallIntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('solution', models.CharField(max_length=60, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(3)])),
                ('listorder', models.SmallIntegerField(default=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserRecentSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(db_index=True, max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('site_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.AllSites')),
            ],
        ),
        migrations.AddField(
            model_name='allsites',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Category'),
        ),
        migrations.AddField(
            model_name='allsites',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Country'),
        ),
        migrations.AddField(
            model_name='allsites',
            name='solution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Solution'),
        ),
        migrations.AlterUniqueTogether(
            name='userrecentsite',
            unique_together=set([('userid', 'site_id')]),
        ),
    ]
